{
  "hash": "042f9c55df8de7825ef1f2947256aafe",
  "result": {
    "markdown": "---\ntitle: \"How to use RStudio\"\n---\n\n\n# Using RStudio\n\nOnce you have [installed R and RStudio](install-r-and-rstudio.qmd), you can start by launching RStudio. If everything was installed correctly, RStudio will automatically launch R as well.\n\nThe first time you open RStudio, you will likely see three separate windows. The first thing you want to do is **open an R Script (!!)** to work in. To do so, go to the toolbar and select **File -\\> New File -\\> R Script**.\n\nYou will now see four windows split evenly over the four corners of your screen:\n\n-   In the **top-left** you have the text editor for the file that you are working in. This will most of the time be an R script or RMarkdown file.\n-   In the **top-right** you can see the data and values that you are currently working with (environment) or view your history of input.\n-   In the **bottom-left** you have the console, which is where you can enter and run code, and view the output. If you run code from your R script, it will also be executed in this console.\n-   In the **bottom-right** you can browse through files on your computer, view help for functions, or view visualizations.\n\nWhile you can directly enter code into your console (bottom-left), you should always work with R scripts (top-left). This allows you to keep track of what you are doing and save every step.\n\n## Running code from the R script\n\nCopy and paste the following example code into your R Script. For now, don't bother understanding the syntax itself. Just focus on running it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n3 + 3\n2 * 5\n6 / 2\n\"some text\"\n\"some more text\"\nsum(1,2,3,4,5)\n```\n:::\n\n\nYou can **run** parts of the code in an R script by pressing Ctrl + Enter (on mac this is command + Enter). This can be done in two ways:\n\n-   If you select a piece of text (so that it is highlighted) you can press Ctrl + Enter to run the selection. For example, select the first three lines (the three mathematical operations) and press Ctrl + Enter.\n-   If you haven't made a selection, but your text cursor is in the editor, you can press Ctrl + Enter to run the line where the cursor is at. This will also move the cursor to the next line, so you can *walk* through the code from top to bottom, running each line. Try starting on the first line, and pressing Ctrl + Enter six times, to run each line separately.\n\n## Assigning values to names\n\nWhen running the example code, you saw that R automatically **evaluates** expressions. The calculation 3+3 evaluates to 6, and 2\\*5 evaluates to 10. You also saw that the **function** *sum(1,2,3,4,5)* evaluates to 15 (the sum of the numbers). We'll address how to use R as a calculator and how to perform functions at a later time. For now, one more thing that you need to know about the R syntax is how values can be **assigned** to names.\n\nIn plain terms, **assignment** is how you make R remember things by assigning them to a name. This works the same way for all sorts of values, from single numbers to entire datasets. You can choose whether you prefer the equal sign (=) or the arrow (\\<-) for assignment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = 2\ny <- \"some text\"\n```\n:::\n\n\nHere we have remembered the number 2 as **x** and the text \"some text\" as **y**. If you are working in RStudio (which you should), you can now also see these names and values in the topright window, under the \"Environment\" tab.\n\nWe can now use the names to retrieve the values, or to use these values in new commands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx * 5\n```\n:::\n\n\nThis should print the value `10` in your R Console (bottom-left window)\n\n## Using RStudio projects\n\nIt is best to put all your code in an RStudio *project*. This is essentially a folder on your computer in which you can store the R files and data for a project that you are working on. While you do not necessarily need a project to work with R, they are very convenient, and we strongly recommend using them.\n\nTo create a new project, go to the top-right corner of your RStudio window. Look for the button labeled **Project: (None)**. Click on this button, and select New Project. Follow the instructions to create a new directory with a new project. Name the project \"R introduction\".\n\nNow, open a new R script and immediately save it (select File -\\> Save in the toolbar, or press ctrl-s). Name the file **my_first_r_script.r**. In the bottom-right corner, under the **Files** tab, you'll now see the file added to the project. The extension **.r** indicates that the file is an R script.\n",
    "supporting": [
      "using-rstudio_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}